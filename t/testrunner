#!/bin/bash

if ! [ -f /.dockerenv ] && ! grep -q 'devices:/docker' /proc/1/cgroup ; then
  echo "Not running inside docker, exiting to avoid data damage." >&2
  exit 1
fi

set -e
set -u

pwd

PASSWORD="selenium"

pkill -f '/usr/bin/java -jar /home/selenium/selenium-server-standalone.jar' || true
# NOTE: this could silently fail because selenium-server-standalone.jar is missing a daemonize option
DISPLAY=:98 /usr/bin/java -jar /home/selenium/selenium-server-standalone.jar -trustAllSSLCertificates -log /home/selenium/selenium.log &

sleep 5

echo "################################################################################"
echo "Finished main setup, now running tests ..."
echo "Selenium server log file available at /home/selenium/selenium.log"

cp -Rf . /tmp/code
cd /tmp/code/

/opt/Sencha/Cmd/sencha app build -c

cd /tmp/code/t/
rm -rf node_modules node_modules
npm install

cd /tmp/code/t/
./node_modules/karma/bin/karma start config/karma.conf.js

cd /tmp/code/
/opt/Sencha/Cmd/sencha web start &
sleep 5
cd /tmp/code/t/
./node_modules/.bin/wdio config/wdio.conf.js

echo "Finished test execution, test execution returned with exit code."
echo "################################################################################"
